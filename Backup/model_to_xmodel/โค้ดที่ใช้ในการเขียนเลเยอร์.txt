input_shape = (32, 40, 1)
num_classes = 8

model = keras.Sequential()
    model.add(keras.Input(shape=input_shape))
    model.add(keras.layers.Conv2D(filters=32, kernel_size=(3,3), padding="same"))
    model.add(keras.layers.Activation("relu"))
    model.add(keras.layers.MaxPooling2D(pool_size=(2,2)))
    model.add(keras.layers.Conv2D(filters=64, kernel_size=(3,3), padding="same"))
    model.add(keras.layers.Activation("relu"))
    model.add(keras.layers.MaxPooling2D(pool_size=(2,2)))
    model.add(keras.layers.Conv2D(filters=128, kernel_size=(3,3), padding="same"))
    model.add(keras.layers.Activation("relu"))
    model.add(keras.layers.MaxPooling2D(pool_size=(2,2)))
    model.add(keras.layers.Conv2D(filters=256, kernel_size=(3,3), padding="same"))
    model.add(keras.layers.Activation("relu"))
    model.add(keras.layers.MaxPooling2D(pool_size=(2,2)))
    ##############################################################################
    #model.add(keras.layers.Dropout(0.25)) # ลบคอมเม้นถ้าจะใส่ Dropout 
    model.add(keras.layers.Flatten())
    model.add(keras.layers.Dense(128))
    model.add(keras.layers.Activation("relu"))
    #model.add(keras.layers.Dropout(0.5)) # ลบคอมเม้นถ้าจะใส่ Dropout
    model.add(keras.layers.Dense(num_classes))
    model.add(keras.layers.Activation("softmax"))